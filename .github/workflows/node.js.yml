name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.11.0'
        cache: 'npm'
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm ci
    - name: Upload node_modules
      uses: actions/upload-artifact@v3
      with:
        name: node_modules
        path: node_modules

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules
        path: node_modules
    - name: Run linting
      run: npm run lint

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules
        path: node_modules
    - name: Build
      run: npm run build
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/

  unit-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules
        path: node_modules
    - name: Run unit tests
      run: npm run test:coverage
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: unit-test-results
        path: coverage/

  bdd-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules
        path: node_modules
    - name: Run BDD tests
      run: npm run test:report
    - name: Upload BDD test results
      uses: actions/upload-artifact@v3
      with:
        name: bdd-test-results
        path: cucumber-report.json

  documentation:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download node_modules
      uses: actions/download-artifact@v3
      with:
        name: node_modules
        path: node_modules
    - name: Generate documentation
      run: npm run docs
    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/

  deploy:
    needs: [lint, build, unit-tests, bdd-tests, documentation]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - name: List artifacts
      run: ls -R artifacts
    - name: Deploy (placeholder)
      run: echo "Deployment would happen here"